name: compile_cosmic
on:
  workflow_dispatch:

env:
  image_registry: ghcr.io/ryanabx
  image_name: cosmic-artifacts
  version: 40
  description: Compiled builds of the COSMIC Desktop Environment
  containerfiles: ./containers/Containerfile.compiler

jobs:
  compile:
    name: Compile COSMIC DE
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64] #add ,arm64 to add back arm build
    
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 38000
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ env.image_name }}
          labels: |
            org.opencontainers.image.title= ${{ env.image_name }}
            org.opencontainers.image.version= ${{ env.version }}
            org.opencontainers.image.description= ${{ env.description }}
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/ryanabx/fedora-cosmic-atomic/main/README.md
            io.artifacthub.package.logo-url=https://avatars.githubusercontent.com/u/56272643?s=200&v=4

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ${{ env.containerfiles }}
          image: ${{ env.image_name }}
          archs: ${{ matrix.arch }}
          build-args: |
            IMAGE_MAJOR_VERSION= ${{ env.version }}
            IMAGE_REGISTRY= ${{ env.image_registry }}
          oci: false

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.image_registry }}
          extra-args: |
            --disable-content-trust
